---
http_interactions:
- request:
    method: get
    uri: https://search.datacite.org/api?f.resourceType_facet.facet.limit=15&facet=true&facet.field=datacentre_facet&facet.limit=10&fl=doi,title,description,publisher,publicationYear,resourceType,resourceTypeGeneral,rightsURI,datacentre_symbol,xml,minted,updated&fq=is_active:true&q=*:*&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma 4.0.3 - https://github.com/datacite/maremma
      Accept:
      - text/html,application/json,application/xml;q=0.9, text/plain;q=0.8,image/png,*/*;q=0.5
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 15 Mar 2018 06:59:22 GMT
      Content-Type:
      - application/json;charset=UTF-8
      Connection:
      - keep-alive
      Server:
      - nginx/1.10.3 (Ubuntu)
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, POST, PUT, DELETE, OPTIONS
      Access-Control-Allow-Headers:
      - DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization
      Access-Control-Expose-Headers:
      - DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 15 Mar 2018 06:59:22 GMT
recorded_with: VCR 3.0.3
